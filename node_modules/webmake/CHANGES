v0.3.7  --  2012.03.22
Fixes:
* Input paths resolution now works properly in all cases (on both *nix and windows)
* Require paths resolution logic is now aware of current system separator type,
  this makes webmake 100% ready for both systems (*nix and windows)..
* Handling of current and parent directory index requires (e.g. './' or '../')
* Handling of paths with trailing slash (e.g. './path/') where both file
  and directory is present (e.g. ./path.js and ./path/)

v0.3.6  --  2012.02.23
* Replace rudimentary require calls parser with solid and fast solution - find-requires module
* Add support for sourcemaps

v0.3.5  --  2012.02.12
* Fixed resolution of paths ended with slash (client side logic didn't handle
  that properly)
* Cleanup and from now on mantain code with JSLint

v0.3.4  --  2012.01.22
* Now programatically webmake can write output file (before it was just
  returning content)
* Byte order mark awareness
* Pack properly modules without EOL at EOF
* Better 'require' calls parser (but still primitive)
* Allow more input files via options
* More efficient parser
* Generate modules tree always in alphabetical order (diff friendly)
* Better error messages
* Support for packing programs that are not in package context
* Take out parser as separate module, thanks to that, more can be done
  programatically
* Use '.js' in paths, without that e.g. dir 'foo' collided with 'foo.js' module
* Webmake template now safe for old JS implementations that doesn't support
  indexes on strings
* Windows support
* Travis CI Configuration

v0.3.3  --  2011.08.12
Meaningful error when requiring one of node's specific modules

v0.3.2  --  2011.08.12
Fixes, following now works:
* Require paths ending with js file extension
* Requiring modules from packages that not have main module

Maintanance:
* Update up to es5-ext@0.6.2

v0.3.1  --  2011.08.11
* Fixed links in package.json (rename aftermath)

v0.3.0  --  2011.08.11
* Rewritten whole logic with help of promises
* Packages support (!)
* webmake function now takes only input path paramater and returns source
  code as result. Shell binary still takes input and output paths as arguments
* Binary is now visible in PATH (when installed globally via npm)
* Better documentation
* Makefile
* Tests configured for TAD suite

v0.2.2  --  2011.07.20
* Renamed to webmake
* Support for modules located in upper paths than program, it didn't work (!)
* Shell (/bin) script

v0.2.1  --  2011.05.11
* Fixed assignment error
* Documentation improvements

v0.2.0  --  2011.05.05
Use widely accepted convention for error handling. Callback passed to webbuild()
will now be called with error (if any) as first argument, and result as second.

v0.1.1  --  2011.05.04
Meta data: more details in package.json

v0.1.0  --  2011.05.04
Initial version
