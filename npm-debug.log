info it worked if it ends with ok
verbose cli [ 'C:\\Program Files (x86)\\nodejs\\\\node.exe',
verbose cli   'C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
verbose cli   'unpublish',
verbose cli   'Blaggie-System' ]
info using npm@1.0.106
info using node@v0.6.2
verbose config file C:\Users\raynos\.npmrc
verbose config file C:\Program Files (x86)\etc\npmrc
verbose config file C:\Program Files (x86)\nodejs\node_modules\npm\npmrc
verbose GET Blaggie-System
verbose raw, before any munging Blaggie-System
verbose url resolving [ 'https://registry.npmjs.org/', './Blaggie-System' ]
verbose url resolved https://registry.npmjs.org/Blaggie-System
silly get cb [ 200,
silly get cb   { vary: 'Accept',
silly get cb     server: 'CouchDB/1.1.0 (Erlang OTP/R14B04)',
silly get cb     etag: '"BO7TR9BWKGMMMJ99AWKTQQ7ZY"',
silly get cb     date: 'Wed, 30 Nov 2011 19:43:50 GMT',
silly get cb     'content-type': 'application/json',
silly get cb     'content-length': '1343' } ]
verbose mkdir (expected) error ENOENT, no such file or directory 'C:\Users\raynos\npm-cache\Blaggie-System'
verbose mkdir done: C:\Users\raynos\npm-cache\Blaggie-System 755
info unpublish No version specified, removing all
verbose DELETE Blaggie-System/-rev/3-47782b1e5cbfa425170192799510e148
verbose raw, before any munging Blaggie-System/-rev/3-47782b1e5cbfa425170192799510e148
verbose url resolving [ 'https://registry.npmjs.org/',
verbose url resolving   './Blaggie-System/-rev/3-47782b1e5cbfa425170192799510e148' ]
verbose url resolved https://registry.npmjs.org/Blaggie-System/-rev/3-47782b1e5cbfa425170192799510e148
ERR! Error: case_clause {[{<<"message">>,<<"invalid 'in' operand n">>},
ERR!   {<<"fileName">>,<<>>},
ERR!   {<<"lineNumber">>,32},
ERR!   {<<"stack">>,
ERR!    <<"diffObj([object Object],(void 0),\"dist-tags.\")@:32\ndiffObj([object Object],[object Object])@:45\n([object Object],[object Object],[object Object],[object Object])@:104\n(function (doc, oldDoc, user, dbCtx) {if (!user || !user.name) {throw {unauthorized: \"Please log in before writing to the db\"};}require(\"monkeypatch\").patch(Object, Date, Array, String);var semver = require(\"semver\");var valid = require(\"valid\");var deep = require(\"deep\");var deepEquals = deep.deepEquals;if (oldDoc) {oldDoc.users = oldDoc.users || {};}doc.users = doc.users || {};\nfunction assert(ok, message) {if (!ok) {throw {forbidden: message};}}\n\nif (isAdmin()) {return;}\nfunction diffObj(o, n, p) {p = p || \"\";var d = [];var seenKeys = [];for (var i in o) {seenKeys.push(i);if (!(i in n)) {d.push(\"Deleted: \" + p + i);}if (typeof o[i] !== typeof n[i]) {d.push(\"Changed Type: \" + p + i);}if (typeof o[i] === \"object\" && o[i] && !n[i]) {d.push(\"Nulled: \" + p + i);}if (typeof o[i] === \"object\" && !o[i] && n[i]) {d.push(\"Un-nulled: \" + p + i);}if (typeof o[i] === \"object\") {d = d.concat(diffObj(o[i], n[i], p + i + \".\"));} else {if (o[i] !== n[i]) {d.push(\"Changed: \" + p + i + \" \" + JSON.stringify(o[i]) + \" -> \" + JSON.stringify(n[i]));}}}for (var i in n) {if (-1 === seenKeys.indexOf(i)) {d.push(\"Added: \" + p + i);}}return d;}\n\nassert(!doc.forbidden || doc._deleted, doc.forbidden);if (oldDoc && !doc._deleted && deepEquals(doc, oldDoc, [[\"users\", user.name], [\"time\", \"modified\"]])) {return;}\nfunction validUser() {if (!oldDoc || !oldDoc.maintainers) {return true;}if (isAdmin()) {return true;}if (typeof oldDoc.maintainers !== \"object\") {return true;}for (var i = 0, l = oldDoc.maintainers.length; i < l; i++) {if (oldDoc.maintainers[i].name === user.name) {return true;}}return false;}\n\n\nfunction isAdmin() {if (dbCtx && dbCtx.admins) {if (dbCtx.admins.names && dbCtx.admins.roles && dbCtx.admins.names.indexOf(user.name) !== -1) {return true;}for (var i = 0; i < user.roles.length; i++) {if (dbCtx.admins.roles.indexOf(user.roles[i]) !== -1) {return true;}}}return user.roles.indexOf(\"_admin\") >= 0;}\n\nvar vu = validUser();if (!vu) {assert(vu, \"user: \" + user.name + \" not authorized to modify \" + doc.name + \"\\n\" + diffObj(oldDoc, doc).join(\"\\n\"));}if (doc._deleted) {return;}assert(valid.name(doc.name), \"name invalid: \" + doc.name);assert(doc.name === doc._id, \"name must match _id\");assert(!doc.mtime, \"doc.mtime is deprecated\");assert(!doc.ctime, \"doc.ctime is deprecated\");assert(typeof doc.time === \"object\", \"time must be object\");assert(typeof doc['dist-tags'] === \"object\", \"dist-tags must be object\");var versions = doc.versions;assert(typeof versions === \"object\", \"versions must be object\");var latest = doc['dist-tags'].latest;if (latest) {assert(versions[latest], \"dist-tags.latest must be valid version\");}for (var v in doc['dist-tags']) {var ver = doc['dist-tags'][v];assert(semver.valid(ver), v + \" version invalid version: \" + ver);assert(versions[ver], v + \" version missing: \" + ver);}for (var ver in versions) {var version = versions[ver];assert(semver.valid(ver), \"invalid version: \" + ver);assert(typeof version === \"object\", \"version entries must be objects\");assert(version.version === ver, \"version must match: \" + ver);assert(version.name === doc._id, \"version \" + ver + \" has incorrect name: \" + version.name);}assert(Array.isArray(doc.maintainers), \"maintainers should be a list of owners\");doc.maintainers.forEach(function (m) {assert(m.name && m.email, \"Maintainer should have name and email: \" + JSON.stringify(m));});var time = doc.time;var c = new Date(Date.parse(time.created)), m = new Date(Date.parse(time.modified));assert(c.toString() !== \"Invalid Date\", \"invalid created time: \" + JSON.stringify(time.created));assert(m.toString() !== \"Invalid Date\", \"invalid modified time: \" + JSON.stringify(time.modified));if (oldDoc && oldDoc.time && oldDoc.time.created && Date.parse(oldDoc.time.created)) {assert(Date.parse(oldDoc.time.created) === Date.parse(time.created), \"created time cannot be changed\");}if (oldDoc && oldDoc.users) {assert(deepEquals(doc.users, oldDoc.users, [[user.name]]), \"you may only alter your own 'star' setting\");}if (doc.url && (!oldDoc || !oldDoc.url || doc.url !== oldDoc.url)) {assert(false, \"Package redirection is deprecated, and will be removed at some point.  Please update your publish scripts.\");}var oldVersions = oldDoc ? oldDoc.versions || {} : {};var oldTime = oldDoc ? oldDoc.time || {} : {};var versions = Object.keys(doc.versions), modified = null;for (var i = 0, l = versions.length; i < l; i++) {var v = versions[i];assert(doc.time[v], \"must have time entry for \" + v);if (!deepEquals(doc.versions[v], oldVersions[v], [[\"directories\"]]) && doc.versions[v]) {var t = Date.parse(doc.time[v]), n = Date.now();assert(doc.time[v] !== oldTime[v] && Math.abs(n - t) < 3600000, v + \" time needs to be updated\\n\" + \"new=\" + JSON.stringify(doc.versions[v]) + \"\\n\" + \"old=\" + JSON.stringify(oldVersions[v]));assert(doc.time[v] === doc.time.modified, v + \" is modified, should match modified time\");assert(typeof doc.versions[v]._npmUser === \"object\", \"_npmUser field must be object\\n(You probably need to upgrade your npm version)\");assert(doc.versions[v]._npmUser.name === user.name, \"_npmUser.name must === user.name\");assert(deepEquals(doc.versions[v].maintainers, doc.maintainers), \"modified version 'maintainers' must === doc.maintainers\");var found = false;for (var i = 0, l = doc.maintainers.length; i < l; i++) {var m = doc.maintainers[i];if (m.name === doc.versions[v]._npmUser.name && m.email === doc.versions[v]._npmUser.email) {found = true;break;}}assert(found, \"_npmUser must be a current maintainer.\\n\" + \"maintainers=\" + JSON.stringify(doc.maintainers) + \"\\n\" + \"current user=\" + JSON.stringify(doc.versions[v]._npmUser));} else if (oldTime[v]) {assert(oldTime[v] === doc.time[v], v + \" time should not be modified 1\");}}for (var v in oldTime) {if (doc.versions[v] || !oldVersions[v]) {continue;}assert(doc.time[v] === oldTime[v], v + \" time should not be modified 2\");}},[object Object],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.1.0r3/share/couchdb/server/main.js:1222\n(\"_design/app\",[object Array],[object Array])@/home/ubuntu/hosting/installs/hosting_v1.1.0r3/share/couchdb/server/main.js:1442\n()@/home/ubuntu/hosting/installs/hosting_v1.1.0r3/share/couchdb/server/main.js:1485\n@/home/ubuntu/hosting/installs/hosting_v1.1.0r3/share/couchdb/server/main.js:1496\n">>}]}: Blaggie-System/-rev/3-47782b1e5cbfa425170192799510e148
ERR!     at Request._callback (C:\Program Files (x86)\nodejs\node_modules\npm\lib\utils\npm-registry-client\request.js:180:12)
ERR!     at Request.callback (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\main.js:99:22)
ERR!     at Request.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\main.js:361:18)
ERR!     at Request.emit (events.js:67:17)
ERR!     at IncomingMessage.<anonymous> (C:\Program Files (x86)\nodejs\node_modules\npm\node_modules\request\main.js:327:16)
ERR!     at IncomingMessage.emit (events.js:88:20)
ERR!     at HTTPParser.onMessageComplete (http.js:137:23)
ERR!     at CleartextStream.ondata (http.js:1125:24)
ERR!     at CleartextStream._push (tls.js:363:27)
ERR!     at SecurePair.cycle (tls.js:679:20)
ERR! Report this *entire* log at:
ERR!     <http://github.com/isaacs/npm/issues>
ERR! or email it to:
ERR!     <npm-@googlegroups.com>
ERR! 
ERR! System Windows_NT 6.1.7600
ERR! command "C:\\Program Files (x86)\\nodejs\\\\node.exe" "C:\\Program Files (x86)\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "unpublish" "Blaggie-System"
ERR! cwd C:\Users\raynos\Desktop\node\DOM-shim
ERR! node -v v0.6.2
ERR! npm -v 1.0.106
verbose exit [ 1, true ]
